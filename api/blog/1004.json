["# ts-node 的实现原理","","- 通过文件路径获取要执行的 _typescript_ 文件代码","- 通过 require.extensions 添加指定后缀的处理函数","- 使用 [typescript api](https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API) 将文件转换为 js, 再使用 js 的编译函数","- 使用 _module_ 模块执行该文件","","## 核心代码","","```ts","import Module = require('module');","import * as ts from 'typescript';","","/**"," * exec specified file"," */","const runFile = () => {","  // tips of run","  process.once('exit', function () {","    if (process.send) {","      process.send({ msg: 'process off' });","    }","  });","","  // Create a local module instance based on `cwd`.","  const cwd = process.cwd();","  const scriptPath = process.argv[2];","  register();","  const module = new Module(scriptPath);","  module.filename = scriptPath;","  module.paths = (Module as any)._nodeModulePaths(cwd);","","  // Prepend `tscn` arguments to CLI for child processes.","  const execPath = process.argv[1];","  process.execArgv.unshift(execPath);","  process.argv = [execPath, scriptPath];","","  Module.runMain();","};","","/**"," * Register TypeScript compiler instance onto node.js"," */","const register = () => {","  // tslint:disable-line","  const jsCompile = require.extensions['.js'];","  require.extensions['.ts'] = function (m: any, filename) {","    const _compile = m._compile;","    m._compile = function (code: string, fileName: string) {","      // ts to js","      let { outputText } = ts.transpileModule(code, {","        compilerOptions: { module: ts.ModuleKind.CommonJS },","      });","      return _compile.call(this, outputText, fileName);","    };","    return jsCompile(m, filename);","  };","};","","runFile();","```","","> require.extensions 提示弃用实际是不鼓励使用，因为官方认为把代码生成 js 代码后再只用才是最高效率的，但该属性永远不会被官方真正弃用","","## github","","[https://github.com/marioa5945/tscn](https://github.com/marioa5945/tscn)",""]